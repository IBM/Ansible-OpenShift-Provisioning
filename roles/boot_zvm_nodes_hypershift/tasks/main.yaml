---
- name: Creating agents 
  block:
    - name: Getting script for booting
      template:
        src: ../templates/boot_nodes.py
        dest: /root/ansible_workdir/boot_nodes.py

    - name: Debug 
      debug: 
        msg: "Booting agent-{{ item }}"

    - name: Booting zvm node
      shell: |
        python /root/ansible_workdir/boot_nodes.py \
        --zvmname "{{ hypershift.agents_parms.zvm_parameters.nodes[item].name }}" \
        --zvmhost "{{ hypershift.agents_parms.zvm_parameters.nodes[item].host }}" \
        --zvmuser "{{ hypershift.agents_parms.zvm_parameters.nodes[item].user }}" \
        --zvmpass "{{ hypershift.agents_parms.zvm_parameters.nodes[item].password }}" \
        --cpu "{{ hypershift.agents_parms.zvm_parameters.vcpus }}" \
        --memory "{{ hypershift.agents_parms.zvm_parameters.memory }}" \
        --kernel 'file:///var/lib/libvirt/images/pxeboot/kernel.img'  \
        --initrd 'file:///var/lib/libvirt/images/pxeboot/initrd.img' \
        --cmdline "$(cat /root/ansible_workdir/agent-{{ item }}.parm)"

    - name:  Attaching dasd disk
      shell: vmcp attach {{ hypershift.agents_parms.zvm_parameters.nodes[item].dasd.disk_id }} to {{ hypershift.agents_parms.zvm_parameters.nodes[item].name }} 
      when: "{{ hypershift.agents_parms.zvm_parameters.disk_type | lower == 'dasd' }}"
    
    - name: Attaching fcp disks
      shell: vmcp attach {{ hypershift.agents_parms.zvm_parameters.nodes[item].lun[0].paths[0].fcp.split('.')[-1] }} to {{ hypershift.agents_parms.zvm_parameters.nodes[item].name }}
      when: "{{ hypershift.agents_parms.zvm_parameters.disk_type | lower == 'fcp' }}"

    - name: Wait for the agent to come up 
      shell: oc get agents -n "{{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }}" --no-headers -o custom-columns=NAME:.metadata.name,APPROVED:.spec.approved | awk '$2 == "false"' | wc -l 
      register: agent_count
      until: agent_count.stdout | int == 1
      retries: 40
      delay: 10

    - name: Get the name of agent 
      shell: oc get agents -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }} --no-headers -o custom-columns=NAME:.metadata.name,APPROVED:.spec.approved | awk '$2 == "false"' 
      register: agent_name

    - name: Approve agents 
      shell: oc -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }}  patch agent {{ agent_name.stdout.split(' ')[0]  }} -p '{"spec":{"approved":true,"hostname":"compute-{{item}}.{{ hypershift.hcp.hosted_cluster_name }}.{{ hypershift.hcp.basedomain }}","installerArgs":"[\"--append-karg\",\"rd.neednet=1\", \"--append-karg\", \"ip={{ hypershift.agents_parms.zvm_parameters.nodes[item].osa.ip }}::{{ hypershift.agents_parms.zvm_parameters.gateway }}:{{ hypershift.agents_parms.zvm_parameters.subnetmask }}:compute-{{ item }}.{{ hypershift.hcp.hosted_cluster_name }}.{{ hypershift.hcp.basedomain }}:{{ hypershift.agents_parms.zvm_parameters.nodes[item].osa.ifname }}:none\", \"--append-karg\", \"nameserver={{ hypershift.agents_parms.zvm_parameters.nameserver }}\", \"--append-karg\",\"rd.znet=qeth,{{ hypershift.agents_parms.zvm_parameters.nodes[item].osa.id }},layer2=1\",\"--append-karg\", {% if hypershift.agents_parms.zvm_parameters.disk_type | lower != 'fcp' %}\"rd.dasd=0.0.{{ hypershift.agents_parms.zvm_parameters.nodes[item].dasd.disk_id }}\"{% else %}\"rd.zfcp={{ hypershift.agents_parms.zvm_parameters.nodes[item].lun[0].paths[0].fcp}},{{ hypershift.agents_parms.zvm_parameters.nodes[item].lun[0].paths[0].wwpn }},{{ hypershift.agents_parms.zvm_parameters.nodes[item].lun[0].id }}\"{% endif %}]"}}' --type merge
  
