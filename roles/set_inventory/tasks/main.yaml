---

- name: Find inventory directory from ansible.cfg
  tags: set_inventory
  shell: cat {{ ansible_config_file }} | grep 'inventory=' | cut -f2 -d"="
  register: find_inventory

- name: Find absolute path to project.
  tags: set_inventory
  shell: |
    set -o pipefail
    ansible_config="{{ ansible_config_file }}"
    echo "${ansible_config%/*}/"
  register: find_project

- name: Check to make sure that all KVM hosts defined in group_vars/all.yaml have a corresponding inventory host_vars file named with matching hostname and .yaml extension, i.e. kvmhost1.yaml
  tags: set_inventory, lpar_check
  stat:
    path: "{{ find_project.stdout }}{{ find_inventory.stdout }}host_vars/{{ item }}.yaml"
  loop: "{{ env.kvm.hostname }}"
  when: item is defined
  register: lpar_host_vars
  failed_when: lpar_host_vars.stat.exists == False

- name: Fail if network_mode is NAT and jumphost vars are undefined.
  tags: set_inventory
  fail:
    msg: "Error jumphost vars undefined: when env.network_mode is NAT, you must set all env.jumphost variables."
  when: ( env.network_mode | upper == 'NAT' ) and (env.jumphost.name is none or env.jumphost.ip is none or env.jumphost.user is none or env.jumphost.pass is none or env.jumphost.path_to_keypair is none)

- name: Template out inventory with localhost, file server, KVM host, jumphost(optional) and bastion information
  tags: set_inventory
  template:
    src: hosts.j2
    dest: "{{ find_project.stdout }}{{ find_inventory.stdout }}/hosts"
    force: yes

- name: Add KVM host(s) info to inventory.
  tags: set_inventory
  ansible.builtin.lineinfile:
    path: "{{ find_project.stdout }}{{ find_inventory.stdout }}/hosts"
    search_string: "{{ env.kvm.hostname[i] }}"
    line: "{{ env.kvm.hostname[i] + ' ansible_host=' + hostvars[groups['kvm_host'][i]]['networking']['ip'] + ' ansible_user=' + hostvars[groups['kvm_host'][i]]['access']['user'] + ' ansible_become_password=' + hostvars[groups['kvm_host'][i]]['access']['pass'] }}"
  with_sequence: start=0 end={{ ( env.kvm.hostname | length ) - 1 }} stride=1
  loop_control:
    extended: yes
    index_var: i
  when: env.kvm.hostname[i] is defined

- meta: refresh_inventory

- name: Add path to Ansible private key in ansible.cfg
  tags: set_inventory
  lineinfile:
    line: "private_key_file=~/.ssh/{{ env.ansible_key_name }}"
    path: "{{ ansible_config_file }}"
    regexp: "private_key_file"
    state: present

- name: check inventory setup
  tags: set_inventory
  command: ansible-inventory --list
  register: inv_check
  failed_when: inv_check.rc != 0

- name: Gather facts to re-read inventory after changes made to inventory
  tags: set_inventory
  ansible.builtin.gather_facts:

- name: Refresh inventory
  tags: set_inventory
  meta: refresh_inventory
