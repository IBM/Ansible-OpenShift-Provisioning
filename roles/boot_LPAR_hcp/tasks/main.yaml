---

- name: Configuring  Hipersockets interface 
  shell: chzdev -e "{{ hcp.data_plane.lpar.nodes[item].hipersockets.subchannels.split(',')[0].split('.')[-1] }}-{{ hcp.data_plane.lpar.nodes[item].hipersockets.subchannels.split(',')[-1].split('.')[-1] }}" layer2=1
  when: "{{ hcp.data_plane.lpar.network_mode | lower == 'hipersockets' }}"
  ignore_errors: true

- name: Adding internal IP address to bastion 
  shell: ip addr add "{{ hcp.bastion_params.internal_ip }}"/24 dev "{{ hcp.data_plane.lpar.nodes[item].hipersockets.ifname }}"
  register: ip_result
  when: "{{ hcp.data_plane.lpar.network_mode | lower == 'hipersockets' }}"
  failed_when: "'exists' not in ip_result.stderr and ip_result.rc != 0"
  ignore_errors: true

- name: Enable IP Forwarding on the bastion
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^net\.ipv4\.ip_forward'
    line: 'net.ipv4.ip_forward = 1'
    state: present
  when: "{{ hcp.data_plane.lpar.network_mode | lower == 'hipersockets' }}"

- name: Reload sysctl settings
  command: sysctl -p
  when: "{{ hcp.data_plane.lpar.network_mode | lower == 'hipersockets' }}"

- name: Add masquerade in firewalld
  shell: firewall-cmd --permanent --zone=public --add-masquerade

- name: Reload firewalld
  shell: firewall-cmd --reload

- name: Allow masquerade on bastion 
  shell: sudo iptables -t nat -A POSTROUTING -o "{{ hcp.bastion_params.interface }}" -j MASQUERADE
  when: "{{ hcp.data_plane.lpar.network_mode | lower == 'hipersockets' }}"

- name: Creating agents 
  block:
    - name: Getting script for booting
      template:
        src: "{{ playbook_dir }}/../roles/boot_LPAR/templates/boot_lpar.py"
        dest: /root/ansible_workdir/boot_lpar.py

    - name: Debug 
      debug: 
        msg: "Booting agent-{{ item }}"

    - name: Booting LPAR
      shell: |
        python3 /root/ansible_workdir/boot_lpar.py \
        --cpcname "{{ hcp.data_plane.lpar.nodes[item].name.split('lp')[0] }}" \
        --lparname "{{ hcp.data_plane.lpar.nodes[item].name }}" \
        --hmchost "{{ hcp.data_plane.lpar.nodes[item].hmc_host }}" \
        --hmcuser "{{ hmca_username }}" \
        --hmcpass "{{ hmca_password }}" \
        --cpu "{{ hcp.data_plane.vcpus }}" \
        --memory "{{ hcp.data_plane.memory }}" \
        --kernel http://"{{ hcp.bastion_params.ip }}":8080/kernel.img \
        --initrd http://"{{ hcp.bastion_params.ip }}":8080/initrd.img \
        --livedisktype "{{ hcp.data_plane.lpar.nodes[item].live_disk.disk_type }}" \
        --devicenr "{{ hcp.data_plane.lpar.nodes[item].live_disk.devicenr }}" \
        --livediskuuid "{{ hcp.data_plane.lpar.nodes[item].live_disk.uuid }}" \
        --livedisklun "{{ hcp.data_plane.lpar.nodes[item].live_disk.lun }}" \ 
        --livediskwwpn "{{ hcp.data_plane.lpar.nodes[item].live_disk.wwpn }}" \
        --netset_ip "{{ hcp.data_plane.lpar.nodes[item].interface.ip }}" \
        --netset_gateway "{{ hcp.data_plane.lpar.gateway }}" \
        --netset_network_type "osa" \
        --netset_network_device "{{ hcp.data_plane.lpar.nodes[item].interface.subchannels }}" \       
        --netset_password "{{ hcp.data_plane.lpar.nodes[item].live_disk.password }}" \
        --netset_dns "{{ hcp.bastion_params.ip }}" \
        --log_level DEBUG \
        --cmdline "$(cat /root/ansible_workdir/agent-{{ item }}.parm)" 

    - name: Wait for the agent to come up 
      shell: oc get agents -n {{ hcp.control_plane.hosted_cluster_name }}-agents --no-headers -o custom-columns=NAME:.metadata.name,APPROVED:.spec.approved | awk '$2 == "false"' | wc -l 
      register: agent_count
      until: agent_count.stdout | int == 1
      retries: 40
      delay: 10

    - name: Get the name of agent 
      shell: oc get agents -n {{ hcp.control_plane.hosted_cluster_name }}-agents --no-headers -o custom-columns=NAME:.metadata.name,APPROVED:.spec.approved | awk '$2 == "false"' 
      register: agent_name
 
    - name: Getting installation disk
      set_fact:
        installation_disk_id: "{% if hcp.data_plane.lpar.disk_type | lower == 'fcp' %}ccw-{{ hcp.data_plane.lpar.nodes[item].lun[0].paths[0].fcp }}-zfcp-{{ hcp.data_plane.lpar.nodes[item].lun[0].paths[0].wwpn }}:{{ hcp.data_plane.lpar.nodes[item].lun[0].id }}{% endif %}{% if hcp.data_plane.lpar.disk_type | lower == 'dasd' %}ccw-0.0.{{ hcp.data_plane.lpar.nodes[item].dasd.disk_id }}{% endif %}"
 
    - name: Approve agents 	
      shell: oc -n {{ hcp.control_plane.hosted_cluster_name }}-agents  patch agent {{ agent_name.stdout.split(' ')[0]  }} -p '{"spec":{"installation_disk_id":"/dev/disk/by-path/{{ installation_disk_id }}","approved":true,"hostname":"compute-{{ item }}.{{hcp.control_plane.hosted_cluster_name }}.{{ hcp.control_plane.basedomain }}"}}' --type merge
 
