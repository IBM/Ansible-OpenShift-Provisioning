---
- name: Create qemu image for agents
  command: "qemu-img create -f qcow2 {{ hcp.data_plane.kvm.storage.qcow.pool_path }}{{ hcp.control_plane.hosted_cluster_name }}-agent{{ item }}.qcow2 {{ hcp.data_plane.kvm.storage.qcow.disk_size }}"
  loop: "{{ range(hcp.data_plane.compute_count|int) | list }}"
  when: hcp.data_plane.kvm.storage.type != 'dasd'

- name: Boot Agents
  shell: |
    {% if hcp.data_plane.kvm.ip_params.static_ip.enabled == true %}
    mac_address=$(oc get NmStateConfig static-ip-nmstate-config-{{ hcp.control_plane.hosted_cluster_name }}-{{ item }} -n {{ hcp.control_plane.clusters_namespace }}-{{ hcp.control_plane.hosted_cluster_name }} -o json | jq -r '.spec.interfaces[] | .macAddress')
    {% else %}
    mac_address="{{ hcp.data_plane.kvm.ip_params.mac[item] }}"
    {% endif %}
    {% if hcp.data_plane.kvm.storage.type != "dasd" %}
    disk_param="{{ hcp.data_plane.kvm.storage.qcow.pool_path }}{{ hcp.control_plane.hosted_cluster_name }}-agent{{ item }}.qcow2"
    {% else %}
    disk_param="{{ hcp.data_plane.kvm.storage.dasd[item] }}"
    {% endif %}

    virt-install \
    --name "{{ hcp.control_plane.hosted_cluster_name }}-agent-{{ item }}" \
    --osinfo detect=on,require=off \
    --autostart \
    --ram="{{ hcp.data_plane.memory }}" \
    --cpu host \
    --vcpus="{{ hcp.data_plane.vcpus }}"  \
    --location "/var/lib/libvirt/images/pxeboot/,kernel=kernel.img,initrd=initrd.img" \
    --disk $disk_param \
    --network network:{{ hcp.bastion_params.network_name }},mac=$mac_address \
    --graphics none \
    --noautoconsole  \
    --wait=-1 \
    --extra-args "rd.neednet=1 nameserver={{ hcp.data_plane.nameserver }}" \
    --extra-args "coreos.live.rootfs_url=http://{{ hcp.bastion_params.ip }}:8080/rootfs.img random.trust_cpu=on rd.luks.options=discard ignition.firstboot ignition.platform.id=metal" \
    --extra-args "console=tty1 console=ttyS1,115200n8 coreos.inst.persistent-kargs=console=tty1 console=ttyS1,115200n8"
  async: 3600
  poll: 0
  loop: "{{ range(hcp.data_plane.compute_count|int) | list }}"