---

- name: Install ansible-kubernetes module
  pip:
    name:
    - kubernetes
    - openshift
    extra_args: --ignore-installed PyYAML

- name: Install Packages on bastion
  package:
    name: "{{ hcp.pkgs.bastion }}"
    state: present

- name: Getting rhel version
  shell: awk -F 'release ' '{print $2}' /etc/redhat-release | awk '{print $1}'
  register: rhel_version

- name: Update sshd_config
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      PasswordAuthentication yes
      PermitRootLogin yes
  when: rhel_version.stdout| float >= 9.0

- name: Restart sshd service
  service:
    name: sshd
    state: restarted
  when: rhel_version.stdout| float >= 9.0
  
# Creating one directory for Storing Files
- name: Create Work Directory
  file:
    path: /root/ansible_workdir
    state: directory

- name: Copy pull secret to ansible_workdir
  copy:
    content: "{{ hcp.control_plane.pull_secret }}"
    dest: /root/ansible_workdir/auth_file

- name: create /etc/haproxy
  file:
    path: /etc/haproxy
    state: directory

- name: create /etc/haproxy/haproxy.cfg 
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg

- name: Get the number of Management Cluster Worker Nodes 
  shell: oc get no -o wide --no-headers|grep -i worker| awk '{print $6}' | wc -l
  register: mgmt_workers_count
  changed_when: false

- name: Get the IPs of Management Cluster Workers 
  shell: oc get no -o wide --no-headers|grep -i worker| awk '{print $6}' 
  register: mgmt_workers
  changed_when: false

- name: Add Management Cluster Worker IPs to Haproxy 
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    line: "    server worker-{{item}} {{ mgmt_workers.stdout_lines[item]}}"
  loop: "{{ range(mgmt_workers_count.stdout|int) | list }}"

- name: Add machine-config-server details to Haproxy
  blockinfile:
    path: /etc/haproxy/haproxy.cfg
    block: |
      frontend {{ hcp.control_plane.hosted_cluster_name }}-machine-config-server
        mode tcp
        option tcplog
        bind api.{{ hcp.control_plane.hosted_cluster_name }}.{{ hcp.control_plane.basedomain }}:22623
        default_backend {{ hcp.control_plane.hosted_cluster_name }}-machine-config-server

      backend {{ hcp.control_plane.hosted_cluster_name }}-machine-config-server
        mode tcp
        balance source
    marker: "# machine-config-server"
  when: hcp.compute_node_type | lower == 'zvm'

- name: Add Management Cluster Worker IPs to Haproxy
  lineinfile:
    path: /etc/haproxy/haproxy.cfg
    line: "    server worker{{item}} {{ mgmt_workers.stdout_lines[item]}}"
  loop: "{{ range(mgmt_workers_count.stdout|int) | list }}"
  when: hcp.compute_node_type | lower == 'zvm'
 
- name: allow http traffic 
  firewalld:
    service: http
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow https traffic 
  firewalld:
    service: https
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic at port 443
  firewalld:
    port: 443/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic at port 80 
  firewalld:
    port: 80/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public
  
- name: allow traffic at port 6443 
  firewalld:
    port: 6443/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: allow traffic to 53 port for DNS 
  tags: firewall
  firewalld:
    port: 53/udp
    zone: "{{ item }}"
    state: enabled
    permanent: true
  with_items:
  - internal
  - public

- name: allow traffic at ports 30000-33000 
  firewalld:
    port: 30000-33000/tcp
    permanent: yes
    zone: "{{ item }}"
    state: enabled
  with_items:
  - internal
  - public

- name: turn on haproxy_connect_any 
  ansible.posix.seboolean: 
    name: haproxy_connect_any
    persistent: true
    state: true

# Configuring Nameserver on bastion for HCP

- name: Enable named
  tags: dns
  ansible.builtin.systemd:
    name: named
    enabled: yes

# management_basedomain 
- name: Getting basedomain of management cluster for forwarding 
  set_fact:
    management_basedomain: "{{ api_server.split('.')[-2] }}.{{ api_server.split('.')[-1].split(':')[0] }}"

- name: Template named.conf file to bastion
  tags: dns
  ansible.builtin.template:
    src: dns-named.conf.j2
    dest: /etc/named.conf
    owner: root
    group: root
    mode: "0644"
    backup: yes

- name: Template DNS forwarding file to bastion
  tags: dns
  ansible.builtin.template:
    src: forward.zone.j2
    dest: /var/named/{{ hcp.control_plane.hosted_cluster_name }}.{{ hcp.control_plane.basedomain }}.zone
    owner: named
    group: named
    mode: "0644"
    backup: yes 

- name: Add HCP Nameserver to /etc/resolv.conf of bastion
  lineinfile:
    dest: /etc/resolv.conf
    insertbefore: BOF
    line: nameserver {{ hcp.bastion_params.ip }}

- name: Restart named to update changes made to DNS
  service:
    name: named.service
    state: restarted
    enabled: true

- name: restart haproxy 
  service:
    name: haproxy.service
    state: restarted
    enabled: true

- name: Restart firewalld.service
  service:
    name: firewalld.service
    state: restarted
    enabled: true

# Hipersockets setup for zVM

- name: Attaching Hipersockets interface
  shell: vmcp attach "{{ hcp.bastion_params.hipersockets.split(',')[0].split('.')[-1] }}-{{ hcp.bastion_params.hipersockets.split(',')[-1].split('.')[-1] }}" to "{{ hcp.bastion_params.user_id }}"
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"
  ignore_errors: true

- name: Configuring  Hipersockets interface 
  shell: chzdev -e "{{ hcp.bastion_params.hipersockets.split(',')[0].split('.')[-1] }}-{{ hcp.bastion_params.hipersockets.split(',')[-1].split('.')[-1] }}" layer2=1
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Enable IP Forwarding on the bastion
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^net\.ipv4\.ip_forward'
    line: 'net.ipv4.ip_forward = 1'
    state: present
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Reload sysctl settings
  command: sysctl -p
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Add masquerade in firewalld
  shell: firewall-cmd --permanent --zone=public --add-masquerade
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Reload firewalld
  shell: firewall-cmd --reload
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Allow masquerade on bastion 
  shell: sudo iptables -t nat -A POSTROUTING -o "{{ hcp.bastion_params.interface }}" -j MASQUERADE
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"

- name: Adding internal IP address to bastion
  shell: ip addr add "{{ hcp.bastion_params.internal_ip }}"/24 dev enc"{{ hcp.bastion_params.hipersockets.split(',')[0].split('.')[-1] }}"
  register: ip_result
  when: "{{ hcp.data_plane.zvm.network_mode | lower == 'hipersockets_converged' }}"
  failed_when: "'exists' not in ip_result.stderr and ip_result.rc != 0"

