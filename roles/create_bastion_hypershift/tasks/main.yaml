---

- name: Create Directory for images and bastion.ks
  file: 
    path: /home/libvirt/images/
    recurse: true
    state: directory

- name: Create bastion.ks file
  template:
    src: ../create_bastion/templates/bastion-ks.cfg.j2
    dest: /home/libvirt/bastion.ks

- name: Removing network configurations
  lineinfile:
    path: /home/libvirt/bastion.ks
    state: absent
    regexp: '^network*'

- name: Adding root password for bastion to bastion.ks
  lineinfile:
    path: /home/libvirt/bastion.ks
    insertafter: '^lang.*'
    line: "rootpw {{ hostvars['bastion_hypershift'].root_pass }}"

- name: Adding ssh key to bastion
  blockinfile:
    path: /home/libvirt/bastion.ks
    insertafter: '^echo.*'
    block: |
      mkdir -p /root/.ssh
      echo "{{ hcp.ssh_private_key_file }}.pub" > /root/.ssh/authorized_keys
      chmod 0700 /root/.ssh
      chmod 0600 /root/.ssh/authorized_keys

- name: Create qemu image for bastion
  command: qemu-img create -f qcow2 /home/libvirt/images/{{ hostvars['bastion_hypershift'].vm_name }}.qcow2 {{ hostvars['bastion_hypervisor'].disk_size }}G

- name: Create bastion 
  shell: |
    virt-install \ 
    --name {{ hostvars['bastion_hypershift'].vm_name }} \
    --memory {{ hostvars['bastion_hypershift'].ram }} \
    --vcpus sockets=1,cores={{ hostvars['bastion_hypershift'].vcpu }},threads=1 \
    --disk /home/libvirt/images/{{ hostvars['bastion_hypershift'].vm_name }}.qcow2,format=qcow2,bus=virtio,cache=none \
    --os-variant "rhel{{ hostvars['bastion_hypershift'].os_variant }}" \
    --network network:{{ bridge_name }} \
    --location '{{ hostvars['file_server'].protocol }}://{{ hostvars['file_server'].fs_user + ':' + hostvars['file_server'].fs_pass + '@' if hostvars['file_server'].protocol == 'ftp' else '' }}{{ hostvars['file_server'].fs_ip }}/{{ hostvars['file_server'].iso_mount_dir }}/' \
    --rng=/dev/urandom --initrd-inject /home/libvirt/bastion.ks \
    --extra-args="ks=file:/bastion.ks ip={{ hostvars['bastion_hypershift'].bastion_ip }}::{{ hostvars['bastion_hypershift'].gateway }}:{{ hostvars['bastion_hypershift'].subnet_mask }}:{{ hostvars['bastion_hypershift'].hostname }}.{{ hostvars['bastion_hypershift'].base_domain }}:{{ hostvars['bastion_hypershift'].interface }}:none console=ttysclp0 {% for ns in hostvars['bastion_hypershift'].nameservers %}nameserver={{ ns }} {% endfor %} \
    --noautoconsole \
    --wait -1

- name: Waiting 1 minute for automated bastion installation and configuration to complete
  ansible.builtin.pause:
    minutes: 1

- name: Add route to bastion from kvm_host
  command: "ip route add {{ hostvars['bastion_hypershift'].bastion_ip }} via {{ gateway }}"
  ignore_errors: yes
