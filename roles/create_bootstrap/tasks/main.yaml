---

# Always creates a new bootstrap VM
- name: Start bootstrap installation
  tags: create_bootstrap
  ansible.builtin.shell: |
    set -o pipefail
    virsh destroy {{ env.cluster.nodes.bootstrap.vm_name }} || true
    virsh undefine {{ env.cluster.nodes.bootstrap.vm_name }} --remove-all-storage || true
    virt-install \
    --name {{ env.cluster.nodes.bootstrap.vm_name }} \
    --osinfo detect=on,name={{ ('rhel8.6') if rhcos_os_variant is not defined else (rhcos_os_variant | lower) }} \
    --autostart \
    --disk size={{ env.cluster.nodes.bootstrap.disk_size }}  \
    --ram {{ env.cluster.nodes.bootstrap.ram }} \
    --cpu host \
    --vcpus {{ env.cluster.nodes.bootstrap.vcpu }} \
    --network network={{ env.bridge_name }} \
    --location {{ rhcos_baseurl }},kernel={{ _rhcos.live_kernel }},initrd={{ _rhcos.live_initrd }} \
    --extra-args "rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=vda \
    ip={{ env.cluster.nodes.bootstrap.ip }}::{{ networking.gateway }}:{{ networking.subnetmask }}:{{ env.cluster.nodes.bootstrap.hostname }}::none:1500 \
    nameserver={{ env.cluster.networking.nameserver1 }} \
    coreos.live.rootfs_url=http://{{ env.bastion.networking.ip }}:8080/bin/{{ _rhcos.live_rootfs }} \
    coreos.inst.ignition_url=http://{{ env.bastion.networking.ip }}:8080/ignition/bootstrap.ign {{ _vm_console }}" \
    --graphics none \
    --console pty,target_type=serial \
    --wait=-1 \
    --noautoconsole
  timeout: 300
