---
- name: Download OpenShift Installer (fips=false)
  ansible.builtin.get_url:
    url: "{{ abi.ocp_installer_base_url }}/{{ abi.architecture }}/clients/ocp/{{ abi.ocp_installer_version }}/{{ 's390x/' if abi.architecture == 'multi' else '' }}{{ ocp_install_tgz }}"
    dest: "/tmp/{{ ocp_install_tgz }}"
    mode: '0640'
    validate_certs: false
  when: not install_config_vars.fips

- name: Download OpenShift Installer (fips=true)
  ansible.builtin.get_url:
    url: "{{ abi.ocp_installer_base_url }}/{{ abi.architecture }}/clients/ocp/{{ abi.ocp_installer_version }}/{{ 's390x/' if abi.architecture == 'multi' else '' }}{{ ocp_install_fips_tgz }}-{{ install_config_vars.control.architecture }}.tar.gz"
    dest: "/tmp/{{ ocp_install_fips_tgz }}-{{ install_config_vars.control.architecture }}.tar.gz"
    mode: '0640'
    validate_certs: false
  when: install_config_vars.fips

- name: Extract OpenShift Installer (fips=false)
  ansible.builtin.unarchive:
    src: "/tmp/{{ ocp_install_tgz }}"
    dest: /usr/local/bin
    remote_src: true
  when: not install_config_vars.fips

- name: Extract OpenShift Installer (fips=true)
  ansible.builtin.unarchive:
    src: "/tmp/{{ ocp_install_fips_tgz }}-{{ install_config_vars.control.architecture }}.tar.gz"
    dest: /usr/local/bin
    remote_src: true
  when: install_config_vars.fips

- name: Download OpenShift Client
  ansible.builtin.get_url:
    url: "{{ abi.ocp_installer_base_url }}/{{ abi.architecture }}/clients/ocp/{{ abi.ocp_installer_version }}/{{ 's390x/' if abi.architecture == 'multi' else '' }}{{ ocp_client_tgz }}"
    dest: "/tmp/{{ ocp_client_tgz }}"
    mode: '0755'
    validate_certs: false

- name: Extract OpenShift Client
  ansible.builtin.unarchive:
    src: "/tmp/{{ ocp_client_tgz }}"
    dest: /usr/local/bin
    remote_src: true

- name: Install NMState package
  ansible.builtin.yum:
    name: nmstate
    state: latest
    skip_broken: true
