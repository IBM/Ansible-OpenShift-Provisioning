---

- name: Create Config map mirror-config ( For updating AgentServiceConfig with the brew mirror information )
  template: 
    src: mirror-config.yml.j2
    dest: /root/ansible_workdir/mirror-config.yaml

- name: Deploy Config map - mirror config
  shell: oc apply -f /root/ansible_workdir/mirror-config.yaml

- name: Downloading ISO for fetching RHCOS version 
  get_url:
    url: "{{ hcp.asc.iso_url }}"
    dest: /root/ansible_workdir/s390x.iso

- name: Mounting ISO
  mount:
    path: "/mnt"
    src: "/root/ansible_workdir/s390x.iso"
    fstype: "iso9660"
    opts: "loop"
    state: "mounted"

- name: Getting RHCOS Version
  shell: cat /mnt/coreos/kargs.json | jq -r '.default' | cut -d'-' -f2- | cut -d ' ' -f 1
  register: ocp_release_version

- name: unmount ISO
  mount:
    path: "/mnt"
    state: "unmounted"

- name: Delete ISO file
  file:
    path: "/root/ansible_workdir/s390x.iso"
    state: absent

- name: Create agenterviceconfig.yaml
  template: 
    src: agent_service_config.yaml.j2
    dest: /root/ansible_workdir/agentserviceconfig.yaml

- name: Deploy AgentServiceConfig
  command: oc apply -f /root/ansible_workdir/agentserviceconfig.yaml

- name: Wait for Agent Service Deployment to be Succeeded
  shell: oc get AgentServiceConfig agent -o json | jq -r '.status|.conditions[]|.status' | grep False | wc -l
  register: asc
  until:
    - asc.stdout == '0'
    - asc.stderr == ''
  retries: 60
  delay: 20

- name: Wait for MCE to be available
  shell: oc get mce --no-headers | awk  '{print $2}'
  register: mce_status
  until: mce_status.stdout == "Available"
  retries: 40
  delay: 10
