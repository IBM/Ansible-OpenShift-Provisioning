---

#- name: Create a new partition.
#  tags: configure_storage, storage_group_2, part
#  community.general.parted:
#    device: /dev/mapper/mpathb
#    number: 1
#    label: gpt
#    state: present
#    part_start: 2048MB
#    part_end: 100%
#    fs_type: xfs
#  register: partition_status
#  when: lpar.storage_group_2.name is defined and lpar.storage_group_2.auto_config == True
#
#- name: Print partition status.
#  tags: configure_storage, storage_group_2, part
#  debug:
#    var: partition_status
#  when: lpar.storage_group_2.name is defined and lpar.storage_group_2.auto_config == True
#
#- name: Reload partition table
#  tags: configure_storage, storage_group_2, part
#  command: partprobe
#  when: lpar.storage_group_2.name is defined and lpar.storage_group_2.auto_config == True
#
#- name: Add storage_group_2 disk to existing volume group.
#  tags: configure_storage, storage_group_2, pvcreate
#  command: pvcreate /dev/mapper/mpathb1
#  when: lpar.storage_group_2.name is defined and lpar.storage_group_2.auto_config == True
#
#- name: Extend logical volume group with new PV
#  tags: configure_storage, storage_group_2, vgextend
#  command: vgextend rhel_aoznode1 /dev/mapper/mpathb1 and lpar.storage_group_2.auto_config == True
#  when: lpar.storage_group_2.name is defined and lpar.storage_group_2.auto_config == True
#
#- name: Extend the root logical volume to consume all remaining space in the volume group.
#  tags: configure_storage, lvextend
#  community.general.lvol:
#    vg: "rhel_{{ networking.hostname | lower }}"
#    lv: root
#    size: +100%FREE
#    resizefs: true

- name: Create directory in <storage.pool_path> for this cluster's storage pool.
  tags: configure_storage, pool
  ansible.builtin.file:
    path: "{{ storage.pool_path }}/{{ env.cluster.networking.metadata_name }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: qemu
    seuser: system_u
    setype: virt_image_t
    mode: '0770'
    recurse: true

- name: Ensure qemu has execute permissions for all parent directories of the directory that will be used as a storage pool for this cluster.
  tags: configure_storage, pool
  file:
    path: "{{ storage.pool_path.split('/')[:i] | join('/') }}"
    state: directory
    group: qemu
    mode: g+x
    recurse: false
  loop: "{{ range( 0, storage.pool_path.split('/') | length + 1 ) }}"
  loop_control:
    extended: yes
    index_var: i
    extended_allitems: false
    label: "{{ storage.pool_path.split('/')[:i] | join('/') }}"
  when: "storage.pool_path.split('/')[:i] | join('/') != ''"

- name: Define a new storage pool
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    command: define
    name: "{{ env.cluster.networking.metadata_name }}-vdisk"
    xml: '{{ lookup ( "template", "vdisk.xml.j2" ) }}'

- name: Set storage pool to active.
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    name: "{{ env.cluster.networking.metadata_name }}-vdisk"
    state: active

- name: Set storage pool to autostart.
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    name: "{{ env.cluster.networking.metadata_name }}-vdisk"
    autostart: yes
