---

#- name: Create a new partition.
#  tags: configure_storage, storage_group_2, part
#  community.general.parted:
#    device: /dev/mapper/mpathb
#    number: 1
#    label: gpt
#    state: present
#    part_start: 2048MB
#    part_end: 100%
#    fs_type: xfs
#  register: partition_status
#  when: lpar.storage_group_2.name is defined
#
#- name: Print partition status.
#  tags: configure_storage, storage_group_2, part
#  debug:
#    var: partition_status
#  when: lpar.storage_group_2.name is defined
#
#- name: Reload partition table
#  tags: configure_storage, storage_group_2, part
#  command: partprobe
#  when: lpar.storage_group_2.name is defined
#
#- name: Add storage_group_2 disk to existing volume group.
#  tags: configure_storage, storage_group_2, pvcreate
#  command: pvcreate /dev/mapper/mpathb1
#  when: lpar.storage_group_2.name is defined
#
#- name: Extend logical volume group with new PV
#  tags: configure_storage, storage_group_2, vgextend
#  command: vgextend rhel_aoznode1 /dev/mapper/mpathb1
#  when: lpar.storage_group_2.name is defined

# - name: Gather facts.
#   tags: gather_facts, lvextend
#   ansible.builtin.setup:

# - name: Extend the root logical volume to consume all remaining space in the volume group.
#   tags: configure_storage, lvextend
#   community.general.lvol:
#     vg: "rhel_{{ ansible_hostname | lower }}"
#     lv: root
#     size: +100%FREE
#     resizefs: true

- name: Create directory in pool_path for this cluster's storage pool.
  tags: configure_storage, pool
  ansible.builtin.file:
    path: "{{ pool_path }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: qemu
    seuser: system_u
    setype: virt_image_t
    mode: '0770'
    recurse: true

- name: Ensure qemu has execute permissions for all parent directories of the directory that will be used as a storage pool for this cluster.
  tags: configure_storage, pool
  file:
    path: "{{ pool_path.split('/')[:i] | join('/') }}"
    state: directory
    group: qemu
    mode: g+x
    recurse: false
  loop: "{{ range( 0, pool_path.split('/') | length + 1 ) }}"
  loop_control:
    extended: yes
    index_var: i
    extended_allitems: false
    label: "{{ pool_path.split('/')[:i] | join('/') }}"
  when: "pool_path.split('/')[:i] | join('/') != ''"

- name: Define a storage pool
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    command: define
    name: "{{ pool_name }}"
    xml: '{{ lookup ( "template", "vdisk.xml.j2" ) }}'

- name: Ensure storage pool is set to active.
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    name: "{{ pool_name }}"
    state: active

- name: Ensure storage pool is set to autostart.
  tags: configure_storage, pool
  community.libvirt.virt_pool:
    name: "{{ pool_name }}"
    autostart: yes
