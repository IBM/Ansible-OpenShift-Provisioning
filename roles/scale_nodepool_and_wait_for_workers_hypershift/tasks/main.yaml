---

- name: Wait for agents to join the cluster
  k8s_info:
    api_version: agent-install.openshift.io/v1beta1
    kind: Agent
  register: agents
  until: agents.resources | length == {{ hypershift.agents_parms.agents_count }}
  retries: 30
  delay: 10
  when: hypershift.compute_node_type | lower != 'zvm'

- name: Get agent names
  command: oc get agents -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }} --no-headers
  register: agents_info
  when: hypershift.compute_node_type | lower != 'zvm'

- name: Create List for agents
  set_fact:
    agents: []
  when: hypershift.compute_node_type | lower != 'zvm'

- name: Get a List of agents 
  set_fact:
    agents: "{{ agents + [agents_info.stdout.split('\n')[item].split(' ')[0]] }}"
  loop: "{{ range(hypershift.agents_parms.agents_count|int) | list }}"
  when: hypershift.compute_node_type | lower != 'zvm'

- name: Patch Agents
  shell: oc -n {{ hypershift.hcp.clusters_namespace }}-{{ hypershift.hcp.hosted_cluster_name }}  patch agent {{ agents[item] }} -p '{"spec":{"installation_disk_id":"/dev/vda","approved":true,"hostname":"worker-{{item}}.{{ hypershift.hcp.hosted_cluster_name }}.{{ hypershift.hcp.basedomain }}"}}' --type merge
  loop: "{{ range(hypershift.agents_parms.agents_count|int) | list }}"
  when: hypershift.compute_node_type | lower != 'zvm'

- name: Scale Nodepool 
  command: oc -n {{ hypershift.hcp.clusters_namespace }} scale nodepool {{ hypershift.hcp.hosted_cluster_name }} --replicas {{ hypershift.agents_parms.agents_count }}

- name: Wait for Agentmachines to create
  k8s_info:
    api_version: capi-provider.agent-install.openshift.io/v1alpha1
    kind: AgentMachine
  register: agent_machines
  until: agent_machines.resources | length == {{ hypershift.agents_parms.agents_count }}
  retries: 30
  delay: 10

- name: Wait for Machines to create
  k8s_info:
    api_version: cluster.x-k8s.io/v1beta1
    kind: Machine
  register: machines
  until: machines.resources | length == {{ hypershift.agents_parms.agents_count }}
  retries: 30
  delay: 10

- name: Create Kubeconfig for Hosted Cluster
  shell: hcp create kubeconfig --namespace {{ hypershift.hcp.clusters_namespace }} --name {{ hypershift.hcp.hosted_cluster_name }} > /root/ansible_workdir/hcp-kubeconfig

- name: Wait for Worker Nodes to Join 
  k8s_info:
    api_version: v1
    kind: Node
    kubeconfig: "/root/ansible_workdir/hcp-kubeconfig"
  register: nodes
  until: nodes.resources | length == {{ hypershift.agents_parms.agents_count }}
  retries: 300
  delay: 10

- name: Wait for Worker nodes to be Ready
  shell: oc get no --kubeconfig=/root/ansible_workdir/hcp-kubeconfig  --no-headers | grep -i 'NotReady' | wc -l
  register: node_status
  until: node_status.stdout == '0'
  retries: 50
  delay: 15 
