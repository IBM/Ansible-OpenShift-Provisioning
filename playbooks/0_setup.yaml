---

- hosts: controller
  tags: controller
  become: false
  gather_facts: true
  vars:
    create_hypervisors_any: groups['hypervisors'] | map('extract', hostvars, ['create']) | list | any
    ssh_target: "{{ hostvars['file_server'].inventory_hostname }}"

  pre_tasks:
    - name: Ensure Ansible Galaxy collections have been installed.
      tags: galaxy
      command: ansible-galaxy collection install -r ../requirements.yaml

    - name: Find ibm_zhmc collection install location for use in next step, if automated LPAR creation is to be used.
      tags: galaxy
      shell: ansible-galaxy collection list ibm.ibm_zhmc | grep -i ansible | cut -c 3-
      register: zhmc_path
      when: create_hypervisors_any

    - name: Ensure zhmcclient requirements are installed.
      tags: galaxy, pip
      pip:
        requirements: "{{ zhmc_path.stdout }}/ibm/ibm_zhmc/requirements.txt"
        executable: pip3
        extra_args: --upgrade
      when: create_hypervisors_any

    - name: Ensure pip modules are installed.
      tags: pip
      ansible.builtin.pip:
        name: pexpect
        executable: pip3

    - name: Check to make sure that each hypervisor to be created has a corresponding inventory host_vars file.
      tags: hypervisor_check
      stat:
        path: "{{ inventory_dir }}/host_vars/{{ hostvars[item].inventory_hostname }}.yaml"
      loop: "{{ groups['hypervisors'] }}"
      when: hostvars[item].create
      register: hypervisor_host_vars
      failed_when: not hypervisor_host_vars.stat.exists

    - name: Check to make sure the bastion has a corresponding inventory host_vars file if it is to be created.
      tags: bastion_check
      stat:
        path: "{{ inventory_dir }}/host_vars/{{ hostvars['bastion'].inventory_hostname }}.yaml"
      when: hostvars['bastion'].create
      register: bastion_host_vars
      failed_when: not bastion_host_vars.stat.exists

    - name: Fail if network_mode is NAT and jumphost vars are undefined.
      tags: set_inventory
      fail:
        msg: "Error! jumphost vars undefined: when any of the hypervisors have network_mode set to NAT, you must define all jumphost variables."
      loop: "{{ groups['hypervisors'] }}"
      when: ( hostvars[item].network_mode | upper == 'NAT' ) and ( hostvars['jumphost'].name is none or hostvars['jumphost'].ansible_host is none or hostvars['jumphost'].ansible_user is none or hostvars['jumphost'].ansible_password is none or hostvars['jumphost'].path_to_keypair is none)

    - name: Check inventory setup.
      tags: set_inventory
      command: ansible-inventory --list
      register: inv_check
      failed_when: inv_check.rc != 0

    - name: Install Extra Packages for Enterprise Linux (EPEL) repository for RHEL machines, in order to install 'sshuttle' package.
      tags: install_packages
      become: true
      dnf:
        name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm'
        state: present
      when: ansible_os_family == 'RedHat'
      
  roles:
    - install_packages
    - ssh_key_gen

- import_playbook: connect_hosts.yaml
  vars:
    ssh_target: file_server
