---

- hosts: localhost
  tags: localhost
  connection: local
  become: False
  gather_facts: True
  roles:
    - set_inventory
  post_tasks:
    - name: Ensure Ansible Galaxy collections have been installed.
      tags: galaxy
      command: ansible-galaxy collection install {{ item }}
      loop: "{{ env.pkgs.galaxy }}"

    - name: Find ibm_zhmc collection install location, if automated LPAR creation is to be used.
      tags: galaxy
      shell: ansible-galaxy collection list ibm.ibm_zhmc | grep -i ansible | cut -c 3-
      register: zhmc_path
      when: env.z.lpar1.create == True or env.z.lpar2.create == True or env.z.lpar3.create == True

    - name: Ensure zhmcclient requirements are installed.
      tags: galaxy
      pip:
        requirements: "{{zhmc_path.stdout}}/ibm/ibm_zhmc/requirements.txt"
        executable: pip3
        extra_args: --upgrade
      when: env.z.lpar1.create == True or env.z.lpar2.create == True or env.z.lpar3.create == True

    - name: Check to make sure that the KVM host has a corresponding inventory host_vars file named with matching hostname and .yaml extension.
      tags: lpar_check
      stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar1.hostname }}.yaml"
      when: env.z.lpar1.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False

    - name: Check to make sure the second KVM hosts have a corresponding inventory host_vars file named with matching hostname and .yaml extension, if defined.
      tags: lpar_check
      stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar2.hostname }}.yaml"
      when: env.z.lpar2.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False

    - name: Check to make sure the third KVM hosts have a corresponding inventory host_vars file named with matching hostname and .yaml extension, if defined.
      tags: lpar_check
      stat:
        path: "{{ inventory_dir }}/host_vars/{{ env.z.lpar3.hostname }}.yaml"
      when: env.z.lpar3.hostname is defined
      register: lpar_host_vars
      failed_when: lpar_host_vars.stat.exists == False

- hosts: localhost
  connection: local
  become: False
  gather_facts: True
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    packages: "{{ env.pkgs.controller }}"
    ssh_target: [ "{{ env.ftp.ip }}", "{{ env.ftp.user }}", "{{ env.ftp.pass }}" ]
  roles:
    - install_packages
    - ssh_key_gen
    - ssh_agent
    - ssh_copy_id #to FTP server