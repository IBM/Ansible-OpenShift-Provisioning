---

# Prepare and then create the temporary bootstrap node and the control nodes
- name: 6 create nodes - prepare KVM guests
  hosts: kvm_host
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - prep_kvm_guests
    # Delete control, compute and infra nodes, if exists
    - delete_nodes

- name: 6 create nodes - create bootstrap
  hosts: kvm_host[0]
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - common
    - create_bootstrap

- name: 6 create nodes - create control nodes
  hosts: kvm_host
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - common
    - create_control_nodes

- name: 6 create nodes - wait for bootstrap to connect control plane (for non-root user)
  hosts: bastion
  become: true
  environment:
    KUBECONFIG: "/home/{{ env.bastion.access.user }}/.kube/config"
  gather_facts: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - {role: wait_for_bootstrap, when: env.bastion.access.user != "root"}

- name: 6 create nodes - wait for bootstrap to connect to control plane (for root user)
  hosts: bastion
  become: true
  environment:
    KUBECONFIG: "/{{ env.bastion.access.user }}/.kube/config"
  gather_facts: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - {role: wait_for_bootstrap, when: env.bastion.access.user == "root"}

- name: 6 create nodes - once bootstrapping is complete, tear down bootstrap.
  hosts: kvm_host[0]
  tags: create_nodes, teardown_bootstrap
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  tasks:
    - name: Destroy bootstrap. Expect ignored errors if bootstrap is already destroyed.
      tags: create_nodes, teardown_bootstrap
      community.libvirt.virt:
        name: "{{ env.cluster.nodes.bootstrap.vm_name }}"
        command: destroy
      ignore_errors: true

    - name: Undefine bootstrap. Expect ignored errors if bootstrap is already undefined.
      tags: create_nodes, teardown_bootstrap
      community.libvirt.virt:
        name: "{{ env.cluster.nodes.bootstrap.vm_name }}"
        command: undefine
      ignore_errors: true
    
    - name: Deleting the entries related to bootstrap in haproxy post it's deletion 
      tags:  create_nodes, teardown_bootstrap
      lineinfile:
        regexp: "bootstrap"
        state: absent
        path: /etc/haproxy/haproxy.cfg
      
    - name: Restart the Haproxy Service
      tags:  create_nodes, teardown_bootstrap
      systemd_service:
        name: haproxy
        state: restarted
      
- name: 6 create nodes - once bootstrapping is complete, create compute nodes.
  hosts: kvm_host
  tags: create_compute_nodes
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - common
    - create_compute_nodes
