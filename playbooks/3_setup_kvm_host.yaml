---

#Copy SSH key to access KVM host
- hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_1
  connection: local
  become: false
  gather_facts: true
  vars_files: 
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.z.lpar1.ip }}","{{ env.z.lpar1.user }}","{{ env.z.lpar1.pass }}","{{ path_to_key_pair }}"]
  tasks:
    - name: Include vars for the KVM host.
      include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar1.hostname }}.yaml"

    - name: Copy SSH key to KVM host.
      import_role:
        name: ssh_copy_id

- hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_2
  connection: local
  become: false
  gather_facts: false
  vars_files: 
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.z.lpar2.ip }}","{{ env.z.lpar2.user }}","{{ env.z.lpar2.pass }}","{{ path_to_key_pair }}"]
  tasks:
    - name: Include vars for second KVM host.
      include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar2.hostname }}.yaml"
      when: env.z.lpar2.hostname is defined

    - name: copy SSH key to second KVM host, if cluster is to be highly available.
      tags: ssh_copy_id, ssh
      import_role:
        name: ssh_copy_id
      when: env.z.lpar2.hostname is defined

- hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_3
  connection: local
  become: false
  gather_facts: false
  vars_files: 
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.z.lpar3.ip }}","{{ env.z.lpar3.user }}","{{ env.z.lpar3.pass }}","{{ path_to_key_pair }}"]
  tasks:
    - name: Include vars for third KVM host.
      include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar3.hostname }}.yaml"
      when: env.z.lpar3.hostname is defined

    - name: copy SSH key to third KVM host, if cluster is to be highly available.
      tags: ssh_copy_id, ssh
      import_role:
        name: ssh_copy_id
      when: env.z.lpar3.hostname is defined

#Prepare KVM host and create bastion node
- hosts: kvm_host
  tags: setup, section_2
  gather_facts: true
  become: true
  vars: 
    packages: "{{ env.pkgs.kvm }}"
  roles:
    - { role: attach_subscription, when: env.redhat.username is defined and env.redhat.password is defined }
    - install_packages
    - httpd
  post_tasks:
    - name: Add ports to firewall
      tags: firewall-libvirt
      ansible.posix.firewalld:
        port: 80/tcp
        permanent: yes
        state: enabled

    - name: Start and enable libvirt
      tags: firewall-libvirt
      ansible.builtin.service:
        name: libvirtd
        enabled: yes
        state: started

    - name: Permit traffic in libvirt zone
      tags: firewall-libvirt
      ansible.posix.firewalld:
        service: http
        permanent: yes
        state: enabled
        zone: libvirt
        immediate: true

    - name: Enable cockpit console
      ansible.builtin.command: systemctl enable --now cockpit.socket

- name: Configure ip_forward in case of NAT
  hosts: kvm_host
  tags: cfg_ip_forward, section_3
  gather_facts: true
  become: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  tasks:
    - name: Configure ip_forward in case of network "NAT"
      tags: cfg_ip_forward
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: "{{ env.z.ip_forward }}"
        sysctl_set: true
        state: present
        reload: true
      when: env.network_mode | upper == 'NAT' 

- hosts: kvm_host
  tags: setup, section_3
  become: true
  roles:
    - configure_storage
    - { role: macvtap, when: env.network_mode | upper != 'NAT' }
