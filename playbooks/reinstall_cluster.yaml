# Use this if you want to re-install nodes with a new OCP version
---

- import_playbook: 0_setup.yaml

- name: Re-Install cluster - Copy SSH key from localhost to access bastion
  hosts: localhost
  tags: ssh, ssh_copy_id, section_1
  gather_facts: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.bastion.networking.ip }}", "{{ env.bastion.access.user }}", "{{ env.bastion.access.pass }}","{{ path_to_key_pair }}"]
  roles:
    - ssh_copy_id

- name: Re-Install cluster - Copy SSH key to access KVM host 1
  hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_1
  connection: local
  become: false
  gather_facts: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.z.lpar1.ip }}","{{ env.z.lpar1.user }}","{{ env.z.lpar1.pass }}","{{ path_to_key_pair }}"]
  tasks:
    - name: Include vars for the KVM host
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar1.hostname }}.yaml"

    - name: Copy SSH key to KVM host
      ansible.builtin.import_role:
        name: ssh_copy_id

- name: Re-Install cluster - Copy SSH key to access KVM host 2
  hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_2
  connection: local
  become: false
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: ["{{ env.z.lpar2.ip }}","{{ env.z.lpar2.user }}","{{ env.z.lpar2.pass }}","{{ path_to_key_pair }}"]
  tasks:
    - name: Include vars for second KVM host
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar2.hostname }}.yaml"
      when: env.z.lpar2.hostname is defined

    - name: copy SSH key to second KVM host, if cluster is to be highly available
      ansible.builtin.import_role:
        name: ssh_copy_id
      when: env.z.lpar2.hostname is defined

- name: Re-Install cluster - Copy SSH key to access KVM host 3
  hosts: localhost
  tags: ssh, ssh_copy_id, section_1, kvm_host_3
  connection: local
  become: false
  gather_facts: false
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  vars:
    ssh_target: [" {{ env.z.lpar3.ip }}","{{ env.z.lpar3.user }}","{{ env.z.lpar3.pass }}","{{ path_to_key_pair }}" ]
  tasks:
    - name: Include vars for third KVM host
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ env.z.lpar3.hostname }}.yaml"
      when: env.z.lpar3.hostname is defined

    - name: copy SSH key to third KVM host, if cluster is to be highly available
      ansible.builtin.import_role:
        name: ssh_copy_id
      when: env.z.lpar3.hostname is defined

- import_playbook: disconnected_mirror_artifacts.yaml
  when: disconnected.enabled

- name: Re-Install cluster - Update ignitions and other install files
  hosts: bastion
  become: true
  vars_files:
    - "{{ inventory_dir }}/group_vars/all.yaml"
  roles:
    - common
    - get_ocp

- import_playbook: 6_create_nodes.yaml
- import_playbook: 7_ocp_verification.yaml
- import_playbook: disconnected_apply_operator_manifests.yaml
  when: disconnected.enabled
