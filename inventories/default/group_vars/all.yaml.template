# Copy this file to 'all.yaml' in the same folder and add your required values there !
#
# For a comprehensive description of each variable, please see documentation here:
# https://ibm.github.io/Ansible-OpenShift-Provisioning/set-variables-group-vars/

# Section 1 - Ansible Controller
env:
  controller:
    sudo_pass: #X

# Section 2 - LPAR(s)
  z:
    high_availability: False
    ip_forward: "{{ 1 if network_mode | upper == 'NAT' else 0 }}"
    lpar1:
      create: True
      hostname: #X
      ip: #X
      user: #X
      pass: #X
    lpar2:
      create: False
#      hostname:
#      ip:
#      user:
#      pass:
    lpar3:
      create: False
#      hostname:
#      ip:
#      user:
#      pass:

# Section 3 - File Server
  file_server:
    ip: #X
    port: '' # please keep empty string to use default port
    user: #X
    pass: #X
    protocol: #X
    iso_mount_dir: #X
    cfgs_dir: #X

# Section 4 - Red Hat
  redhat:
    username: #X
    password: #X
    manage_subscription: True
    # Make sure to enclose pull_secret in 'single quotes'
    pull_secret: #'X'

# Section 5 - Bastion
  bastion:
    create: True
    vm_name: #X
    resources:
      disk_size: 30
      ram: 4096
      swap: 4096
      vcpu: 4
      vcpu_model_option: "--cpu host"
    networking:
      ip: #X
      ipv6: #X
      hostname: #X
      base_domain: #X
      subnetmask: #X
      gateway: #X
      ipv6_gateway: #X
      ipv6_prefix: #X
      nameserver1: #X
#      nameserver2:
      forwarder: 1.1.1.1
      interface: #X
    access:
      user: #X
      pass: #X
      root_pass: #X
    options:
      dns: True
      loadbalancer:
        on_bastion: True
#        public_ip:
#        private_ip:

# Section 6 - Cluster Networking
  cluster:
    networking:
      metadata_name: #X
      base_domain: #X
      subnetmask: #X
      gateway: #X
      ipv6_gateway: #X
      ipv6_prefix: #X
      nameserver1: #X
#      nameserver2:
      forwarder: 1.1.1.1
      interface: #X

# Section 7 - Bootstrap Node
    nodes:
      bootstrap:
        disk_size: 120
        ram: 16384
        vcpu: 4
        vcpu_model_option: "--cpu host"
        vm_name: #X
        ip: #X
        ipv6: #X
        hostname: #X

# Section 8 - Control Nodes
      control:
        disk_size: 120
        ram: 16384
        vcpu: 4
        vcpu_model_option: "--cpu host"
        vm_name:
          - #X
          - #X
          - #X
        ip:
          - #X
          - #X
          - #X
        ipv6:
          - #X
          - #X
          - #X
        hostname:
          - #X
          - #X
          - #X

# Section 9 - Compute Nodes
      compute:
        disk_size: 120
        ram: 16384
        vcpu: 4
        vcpu_model_option: "--cpu host"
        vm_name:
          - #X
          - #X
        ip:
          - #X
          - #X
        ipv6:
          - #X
          - #X
        hostname:
          - #X
          - #X

# Section 10 - Infra Nodes
#      infra:
#        disk_size: 120
#        ram: 16384
#        vcpu: 4
#        vm_name:
#          - infra-1
#          - infra-2
#        ip:
#          - 1.1.1.1
#          - 1.1.1.2
#        ipv6:
#          - fd00::11
#          - fd00::12
#        hostname:
#          - infra1
#          - infra2

#######################################################################################
# All variables below this point do not need to be changed for a default installation #
#######################################################################################

# Section 11 - (Optional) Packages
  pkgs:
    galaxy: [ ibm.ibm_zhmc, community.general, community.crypto, ansible.posix, community.libvirt ]
    controller: [ openssh, expect, sshuttle ]
    kvm: [ libguestfs, libvirt-client, libvirt-daemon-config-network, libvirt-daemon-kvm, cockpit-machines, libvirt-devel, virt-top, qemu-kvm, python3-lxml, cockpit, lvm2 ]
    bastion: [ haproxy, httpd, bind, bind-utils, expect, firewalld, mod_ssl, python3-policycoreutils, rsync ]
    hypershift: [ make, jq, git, virt-install ]
    zvm: [ git, python3-pip, python3-devel, openssl-devel, rust, cargo, libffi-devel, wget, tar, jq, gcc, make, x3270, python39 ]

# Section 12 - OpenShift Settings
  install_config:
    api_version: v1
    compute:
      architecture: s390x
      hyperthreading: Enabled
    control:
      architecture: s390x
      hyperthreading: Enabled
    cluster_network:
      cidr: 10.128.0.0/14
      host_prefix: 23
      type: OVNKubernetes
    service_network: 172.30.0.0/16
    fips: 'false'

# Section 13 - (Optional) Proxy
#  proxy:
#    http:
#    https:
#    no:

# Section 14 - (Optional) Misc
  language: en_US.UTF-8
  timezone: America/New_York
  keyboard: us
  root_access: false
  ansible_key_name: ansible-ocpz
  ocp_ssh_key_comment: OpenShift key
  bridge_name: macvtap
  network_mode:
  use_ipv6: True
  use_dhcp: False

#jumphost if network mode is NAT
  jumphost:
    name:
    ip:
    user:
    pass:
    path_to_keypair:

# Section 15 - OCP and RHCOS (CoreOS)

# ocp_download_url with '/' at the end !
ocp_download_url: "https://mirror.openshift.com/pub/openshift-v4/multi/clients/ocp/4.13.1/s390x/"
# ocp client and installer filenames
ocp_client_tgz: "openshift-client-linux.tar.gz"
ocp_install_tgz: "openshift-install-linux.tar.gz"

# rhcos_download_url with '/' at the end !
rhcos_download_url: "https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.12/4.12.3/"

# For rhcos_os_variant use the OS string as defined in 'osinfo-query os -f short-id'
rhcos_os_variant: rhel8.6

# RHCOS live image filenames
rhcos_live_kernel: "rhcos-4.12.3-s390x-live-kernel-s390x"
rhcos_live_initrd: "rhcos-4.12.3-s390x-live-initramfs.s390x.img"
rhcos_live_rootfs: "rhcos-4.12.3-s390x-live-rootfs.s390x.img"

# Section 16 - Hypershift ( Optional )

hypershift:
  compute_node_type:       # KVM or zVM

  kvm_host:
  kvm_host_user:
  bastion_hypershift:
  bastion_hypershift_user:

  create_bastion: true
  networking_device: enc1100 # Following set of parameters required only if create_bastion is true
  gateway:

  bastion_parms:
    interface:
    hostname:
    base_domain:
    os_variant:
    nameserver:
    gateway:
    subnet_mask:


  # Parameters for oc login

  mgmt_cluster_nameserver:
  oc_url:

  #Hosted Control Plane Parameters

  hcp:
    high_availabiliy: true
    clusters_namespace:
    hosted_cluster_name:
    basedomain:
    pull_secret_file: /root/ansible_workdir/auth_file
    ocp_release:
    machine_cidr: 192.168.122.0/24
    arch:
    # Make sure to enclose pull_secret in 'single quotes'
    pull_secret:

  # MultiClusterEngine Parameters
  mce:
    version:
    instance_name: engine
    delete: false

  # AgentServiceConfig Parameters

  asc:
    url_for_ocp_release_file:
    db_volume_size: "10Gi"
    fs_volume_size: "10Gi"
    ocp_version:
    iso_url:
    root_fs_url:
    mce_namespace: multicluster-engine # This is the Recommended Namespace for Multicluster Engine operator

  agents_parms:
    agents_count:

    # KVM specific parameters - KVM on s390x

    static_ip_parms:
      static_ip: true
      ip:     # Required only if static_ip is true
        #-
        #-
      interface: eth0
    # If you want to use specific mac addresses, provide them here
    agent_mac_addr:
      #-
    disk_size: 100G
    ram: 16384
    vcpus: 4
    nameserver:
    storage:
      pool_path: "/var/lib/libvirt/images/"


    # zVM specific parameters - s390x

    zvm_parameters:
      network_mode: vswitch   # Supported modes: vswitch,osa
      disk_type:              # Supported modes: fcp , dasd
      vcpus: 4
      memory: 16384
      nameserver:
      subnetmask:
      gateway:

      nodes:
        - name: 
          host: 
          user: 
          password: 
          interface:
            ifname: encbdf0
            nettype: qeth
            subchannels: 0.0.bdf0,0.0.bdf1,0.0.bdf2
            options: layer2=1
            ip:

          # Required if disk_type is dasd
          dasd:
            disk_id:

          # Required if disk_type is fcp
          lun:
          - id:
            paths:
              - wwpn:
                fcp:

        - name: 
          host: 
          user: 
          password: 
          interface:
            ifname: encbdf0
            nettype: qeth
            subchannels: 0.0.bdf0,0.0.bdf1,0.0.bdf2
            options: layer2=1
            ip:

          dasd:
            disk_id:

          lun:
          - id:
            paths:
              - wwpn:
                fcp:


# Section 17 - (Optional) Setup disconnected clusters
# Warning: currently, the oc-mirror plugin is officially downloadable to amd64 only.
disconnected:
  enabled: False
  registry:
    url: 'registry url'
    pull_secret: '' # this is similar to env.redhat.pull_secret but it will only contain secrets to be applied to the cluster in disconnected mode.
    mirror_pull_secret: '' # this should contain a pull secret that contains the combination of env.redhat.pull_secret and pull secret  with push access to mirror registry for mirroring
    ca_trusted: False
    ca_cert: |
      -----BEGIN CERTIFICATE-----
      if ca_trusted is False, then this ca will be added to mirror host anchors as well as to the install config of cluster
      -----END CERTIFICATE-----
  mirroring:
    host: # this is the host that can access the internet as well as the registry
      name: hosname
      ip: x.x.x.x
      user: mirroruser # with become access
      pass: mirrorpassword
    file_server: # in disconnected mode, the client binaries and rhcos will be put on env.file_server and then downloaded to the final destination from there. For now, its only oc-mirror. Rest of artifacts will be downloaded from urls
      clients_dir: 'clients'
      oc_mirror_tgz: 'oc-mirror.tar.gz' # name of oc-mirror plugin binary in clients_dir. should be a tar.gz file. You must place this in your ftp server after downloading it yourself from https://console.redhat.com/openshift/downloads for amd64 (or building it yourself if your mirror host is s390x)
    client_download: # this will download oc binary to the mirror host for use on the mirror host for mirroring
      ocp_download_url: "https://mirror.openshift.com/pub/openshift-v4/multi/clients/ocp/4.13.1/amd64/"
      ocp_client_tgz: 'openshift-client-linux.tar.gz' # name of the oc binary. Should be a tar.gz file
    legacy:
      platform: False # if true then platform is mirrored in the old way and install config will be patched with the imagecontentsourcepolicy
      ocp_quay_release_image_tag: '4.13.1-s390x'
      ocp_org: 'ocp4'
      ocp_repo: 'openshift4'
      ocp_tag: 'v4.13.1' #  platform images will be pushed to {tegistry_url}/{ocp_org}/{ocp_repo}:{ocp_tag}
    oc_mirror:
      oc_mirror_args:
        continue_on_error: False
        source_skip_tls: False
      post_mirror:
        mapping:
          replace:
            enabled: False
            list:
            - regexp: what
              replace: with
      release_image_tag: '4.13.1-multi'
      image_set: # this field is a standard image set from oc-mirror documentation. The only exception is the storageConfig which is altered to allow substitution of disconnected.registry.url
        storageConfig:
          registry:
            enabled: True # use registry storage backend. Currently only method supproted
            imageURL: # the final value will be {imageURL: disconnected.registry.url/org/repo}
              org: mirror
              repo: oc-mirror-metadata
            skipTLS: false # standard field form oc-mirror schema
        mirror: # this field is also atandard from the oc-mirror schema. It will be substituted as is into the final image set.
          platform:
            architectures:
            - multi # note: while image tags such as `multi-s390x` are also available on quay, we cannot mirror these, so list can only contain pure architecture names such as `s390x` or the multiarch `multi`
            channels:
            - name: stable-4.13
              full: false
              minVersion: 4.13.1
              maxVersion: 4.13.1
          operators:
            - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.13
              full: false
              packages:
              - name: serverless-operator
                channels:
                - name: stable
                  #minVersion: '2.4.1-0'
                  #maxVersion: '2.4.1-0'
          additionalImages:
          - name: registry.redhat.io/ubi8/ubi:latest
          helm: {}

# Section 18 - (Optional) Create additional compute node in a day-2 operation

day2_compute_node:
  vm_name:
  vm_hostname:
  vm_ip:
  vm_ipv6:
  vm_interface:
  hostname:
  host_arch:
