# Copy this file and rename it to inventory.yaml in the same folder and variables.
# Variables with #X are required to be filled in, others have sensible defaults but must still be double checked.
# For a comprehensive description of each variable, please see documentation here:
# https://ibm.github.io/Ansible-OpenShift-Provisioning/vars/overview/

all:
  vars:
    ansible_ssh_private_key_file: #X

    rh_username: #X
    rh_pass: "{{ vault_redhat_pass }}"
    rh_pull_secret: "{{ vault_redhat_pull_secret }}"

    timezone: America/New_York
    language: en_US.UTF-8
    keyboard: us

    #proxy_env:
      #http_proxy: #optional
      #https_proxy: #optional
      #no_proxy: #optional

    # ocp_download_url with '/' at the end !
    ocp_download_url: https://mirror.openshift.com/pub/openshift-v4/multi/clients/ocp/4.13.1/s390x/
    # ocp client and installer filenames
    ocp_client_tgz: openshift-client-linux.tar.gz
    ocp_install_tgz: openshift-install-linux.tar.gz

    # rhcos_download_url with '/' at the end !
    rhcos_download_url: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.12/4.12.3/

    # RHCOS live image filenames
    rhcos_live_kernel: rhcos-4.12.3-s390x-live-kernel-s390x
    rhcos_live_initrd: rhcos-4.12.3-s390x-live-initramfs.s390x.img
    rhcos_live_rootfs: rhcos-4.12.3-s390x-live-rootfs.s390x.img

    # For rhcos_os_variant use the OS string as defined in 'osinfo-query os -f short-id'
    rhcos_os_variant: rhel8.7

    metadata_name: #X
    base_domain: #X

  hosts:
    controller:
      ansible_connection: local
      ansible_become_password: "{{ vault_controller_pass }}"
      pkgs: [ openssh, expect, sshuttle ]

    bastion:
      bastion_ip: #X
      bastion_user: #X
      ansible_host: "{{ bastion_ip }}"
      ansible_user: "{{ bastion_user }}"
      ansible_become_password: "{{ vault_bastion_pass }}"
      pkgs: [ haproxy, httpd, bind, bind-utils, expect, firewalld, mod_ssl, python3, python3-pip python3-policycoreutils, rsync, curl, jq, mc, net-tools, wget, network-scripts ]
      fqdn: #X
      nameservers:
        - "{{ bastion_ip }}" # Will be same as bastion's bastion_ip var if setup_dns is True
        #- #optional
      forwarder: 1.1.1.1
      setup_dns: True
      setup_openvpn: True
      setup_lb: True
      #lb_public_ip: #Only required if setup_lb is False
      #lb_private_ip: #Only required if setup_lb is False
      ssh_cluster_private_key_file: /root/.ssh/id_rsa
      create: True #If True, must define variables in host_vars/bastion.yaml

    file_server:
      fs_ip: #X
      fs_user: #X 
      fs_pass: "{{ vault_file_server_pass }}"
      ansible_host: "{{ fs_ip }}"
      ansible_user: "{{ fs_user }}"
      ansible_become_password: "{{ fs_pass }}"
      protocol: http
      iso_os_variant: rhel8.7
      doc_root: /var/www/html
      iso_mount_dir: #X 
      cfgs_dir: #X 

    #jumphost: #Section only required if hypervisor network_mode is set to 'NAT'
      #ansible_host: 
      #ansible_user: 
      #ansible_password: "{{ vault_jumphost_pass }}"
      #ssh_jumphost_private_key_file: "/home/{{ ansible_user }}/.ssh/id_rsa"

  children:  
    hypervisors:
      hosts:
        hypervisor_1:
          hypervisor_ip: #X
          hypervisor_user: #X
          ansible_become_password: "{{ vault_hypervisor_1_pass }}"
          guests:
            - bastion
            - control_1
            - compute_1
        hypervisor_2: 
          hypervisor_ip: #X
          hypervisor_user: #X
          ansible_become_password: "{{ vault_hypervisor_2_pass }}"
          guests:
            - control_2
            - compute_2
        hypervisor_3: 
          hypervisor_ip: #X
          hypervisor_user: #X 
          ansible_become_password: "{{ vault_hypervisor_3_pass }}"
          guests:
            - control_3
            - bootstrap_node
            - compute_3
      vars:
        ansible_host: "{{ hypervisor_ip }}"
        ansible_user: "{{ hypervisor_user }}"
        virt_type: kvm #Only kvm available
        cfgs_dir: "/home/{{ hypervisor_user }}/ocp"
        pkgs: [ libguestfs, libvirt-client, libvirt-daemon-config-network, libvirt-daemon-kvm, cockpit-machines, libvirt-devel, virt-top, qemu-kvm, python3-lxml, cockpit, lvm2 ]
        network_name: macvtap
        network_mode: #default is macvtap
        network_interface: "{{ ansible_default_ipv4.interface }}"
        ip_forward: 0
        pool_name: "{{ metadata_name }}_vdisk"
        pool_path: "/home/{{ hypervisor_user }}/VirtualMachines/{{ metadata_name }}"
        create: True
        
    cluster:
      vars: 
        gateway: #X
        netmask: #X
        nameservers:
          - "{{ hostvars['bastion'].bastion_ip }}"
          #- #optional
        fips: false
        hyperthreading: Enabled
        forwarder: 1.1.1.1
        cidr: 10.128.0.0/14
        host_prefix: 23
        type: OVNKubernetes
        service_network: 172.30.0.0/16
        api_version: v1
        architecture: s390x
      hosts:
        bootstrap_node:
          node_ip: #X
          hostname: #X
          vm_name: bootstrap
          disk_size: 120
          ram: 16384
          vcpu: 4

      children:
        control_nodes:
          vars:
            disk_size: 120
            ram: 16384
            vcpu: 4  
          hosts:
            control_1:
              node_ip: #X
              vm_name: control-1
              hostname: #X
            control_2:
              node_ip: #X
              vm_name: control-2
              hostname: #X 
            control_3:
              node_ip: #X
              vm_name: control-3
              hostname: #X

        compute_nodes: 
          vars:
            disk_size: 120
            ram: 16384
            vcpu: 4
          hosts:
            compute_1:
              node_ip: #X
              vm_name: compute-1
              hostname: #X
            compute_2:
              node_ip: #X
              vm_name: compute-2
              hostname: #X
            compute_3:
              node_ip: #X
              vm_name: compute-3
              hostname: #X
            #compute_3: ###Add as many as needed###
              #node_ip: #X
              #vm_name: compute_3
              #hostname: compute_2
            #compute_4:
              #node_ip: #X
              #vm_name: infra_1
              #hostname: infra_1

    #hypershift: # Variables in this section are only required if setting up HyperShift.
      #hosts:
        #hypervisor_hypershift:
          #hypervisor_ip: #X
          #hypervisor_user: #X
          #ansible_become_password: "{{ vault_hypervisor_hypershift_pass }}"
          #ansible_host: "{{ hypervisor_ip }}"
          #ansible_user: "{{ hypervisor_user }}"
          #pkgs: [ make, jq, git, virt-install, libguestfs, libvirt-client, libvirt-daemon-config-network, libvirt-daemon-kvm, cockpit-machines, libvirt-devel, virt-top, qemu-kvm, python3-lxml, cockpit, lvm2 ]
          #network_interface: "{{ ansible_default_ipv4.interface }}"
          #network_name: macvtap
          #gateway: "{{ ansible_default_ipv4.gateway }}"
        #bastion_hypershift:
          #bastion_ip: #X
          #bastion_user: #X
          #ansible_become_password: "{{ vault_bastion_hypershift_pass }}"
          #ansible_host: "{{ bastion_ip }}"
          #ansible_user: "{{ bastion_user }}"
          #pkgs: [ make, jq, git, virt-install, haproxy, httpd, bind, bind-utils, expect, firewalld, mod_ssl, python3-policycoreutils, rsync ]
          #create: True
          # The rest of the variables for bastion_hypershift below are only required if 'create' above is True.
          #vm_name: "{{ hcp.hosted_cluster_name }}-bastion"
          #disk_size: 100
          #vcpu: 4
          #ram: 4096
          #interface: 
          #hostname: 
          #base_domain: 
          #os_variant: rhel8.7
          #nameservers:
            #- 
            #- #Optional 
          #gateway: 
          #subnet_mask: 
          #root_pass: "{{ vault_bastion_hypershift_root_pass }}"
      #vars:
        #branch_for_cli: 
        #mgmt_cluster_nameserver: #X
        #go_version: "1.19.5"  # Change this if you want to install any other version  of go
        #oc_url: #X
        #hcp:
          #clusters_namespace: #X
          #hosted_cluster_name: #X
          #basedomain: #X
          #pull_secret_file: /root/ansible_workdir/auth_file
          #ocp_release: #X
          #machine_cidr: #X
          #arch: #X
          #ssh_private_key_file: /root/.ssh/id_rsa
          #pull_secret: "{{ vault_hcp_pull_secret }}"
          #api_server: 
          #user_name: kubeadmin
          #password: "{{ vault_hcp_pass }}"
        #asc:
          #url_for_ocp_release_file: #X
          #db_volume_size: #X
          #fs_volume_size: #X
          #ocp_version: #X
          #iso_url: #X
          #root_fs_url: #X
          #mce_namespace: multicluster-engine # Recommended